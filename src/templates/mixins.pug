mixin breadcrumbs(title, subtitle, data)
    section.header_title.pt50
        .container
            .row
                .pull-left
                    h1.text-uppercase= title
                        span.small-text= subtitle
                .pull-right
                    ol.breadcrumb.pull-right.m0
                        each elem in data
                            - let active = (elem[1] == '') ? 'active' : ''
                            li.breadcrumb-item(class=" " + active)
                                if elem[1] == ''
                                    = elem[0]
                                else
                                    a(href=elem[1])= elem[0]

mixin fieldBlock(name, data, attr)

    // If we did not created fields vocabulary
    // Assume it is empty field
    if fields[name] == null
        - console.log('bad field', name);
        - fields[name] = {}
        - fields[name]['label'] = name
        - fields[name]['required'] = false

    if values == null
        - values = {}
    if values[name] == null
        - values[name] = data

    if attr.type == 'checkbox' 
        div(class="form-group " + (attr.row == 0 ? '' : ' row ') + name + (fields[name].required == true ? ' required ' : ' '))
            div(class=(attr.class1 ? attr.class1 : 'col-md-2') + ' text-md-right text-xs-right')
                input(
                    id=name
                    name=name
                    value=values[name]
                    type="checkbox"
                ).form-check-input
            div(class=attr.class2  ? attr.class2 : 'col-md-10')
                label(for=name).text-justify #{attr.text}
    else if attr.type == 'radio' 
        div(class="form-group " + (attr.row == 0 ? '' : ' row ') + name + (fields[name].required == true ? ' required ' : ' '))
            label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
            div(class=attr.class2)
                each v in fields[name].choices
                    label.col-lg-3
                        input(
                            type="radio" 
                            class="form-check-input" 
                            name=name
                            checked=(v.value == values[name] ? "checked" : undefined)
                            value=v.value)
                        | #{v.display_name}
    else if attr.type == 'choice' 
        div(class="form-group " + (attr.row == 0 ? '' : ' row ') + name + (fields[name].required == true ? ' required ' : ' '))
            label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
            div(class=attr.class2)
                select(
                    id=name
                    name=name
                ).custom-select
                    each v in fields[name].choices
                        option(value=v.value selected=(v.value == values[name] ? "selected" : undefined)) #{v.display_name}
    else if attr.type == 'json' 
        div(class="form-group " + (attr.row == 0 ? '' : ' row ') + name + (fields[name].required == true ? ' required ' : ' '))
            - counter = attr.index || 0
            - indexCounter = attr.index || 0
            if values[name].length == 0
                a(href="#" data-section=name).delete-section
                    i.fa.fa-times
                each k,v in fields[name].schema
                    div(class='form-group clearfix index_' + indexCounter)
                        label.col-lg-3.text-lg-right #{k.label}
                        .col-lg-9
                            if k.type == 'text' 
                                textarea(
                                    id=name + '_' + v
                                    name=name + '[' + indexCounter + '][' + v + ']'
                                    placeholder=k.placeholder ? k.placeholder : k.label
                                  ).form-control #{k[counter]}
                            else
                                input(
                                    id=name + '_' + v
                                    name=name + '[' + indexCounter + '][' + v + ']'
                                    placeholder=k.placeholder ? k.placeholder : k.label
                                    type=k.type
                                    value=k[counter]
                                ).form-control
                    - counter ++
                - indexCounter ++
            else
                - counter = 0
                - indexCounter = attr.index || 0
                - let kkeys = Object.keys(values[name])
                each el in values[name]
                    a(href="#" data-section=name data-index=indexCounter).delete-section
                        i.fa.fa-times
                    each k1,v in fields[name].schema
                        - let k = values[name][kkeys[counter]][v]
                        - let t = fields[name].schema[v]
                        div(class='form-group clearfix index_' + indexCounter )
                            label.col-lg-3.text-lg-right #{t.label}
                            .col-lg-9
                                if t.type == 'text' 
                                    textarea(
                                        id=name + '_' + v
                                        name=name + '[' + indexCounter + '][' + v + ']'
                                        placeholder=t.placeholder ? t.placeholder : t.label
                                      ).form-control #{k}
                                else
                                    input(
                                        id=name + '_' + v
                                        name=name + '[' + indexCounter + '][' + v + ']'
                                        placeholder=t.placeholder ? t.placeholder : t.label
                                        type=t.type
                                        value=k
                                    ).form-control
                    - counter ++
                    - indexCounter ++
    else
        div(class="form-group " + (attr.row == 0 ? '' : ' row ') + name + (fields[name].required == true ? ' required ' : ' '))
            label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
            div(class=attr.class2)
                if attr.type == 'textarea' 
                    textarea(
                        id=name
                        name=name
                        placeholder=attr.placeholder ? attr.placeholder : fields[name].label
                      ).form-control #{values[name]}
                else
                    input(
                        id=name
                        name=name
                        placeholder=attr.placeholder ? attr.placeholder : fields[name].label
                        type=attr.type ? attr.type : 'text'
                        value=values[name]
                      ).form-control


mixin fieldDropzone(name, attr, type)
    // If we did not created fields vocabulary
    // Assume it is empty field
    if fields[name] == null
        - console.log('bad field', name);
        - fields[name] = {}
        - fields[name]['label'] = name
        - fields[name]['required'] = false

    if values == null
        - values = {}
    if values[name] == null
        - values[name] = data

    - type = attr.viewType ? attr.viewType : 1

    if type == 1
        div(class='row media-item ' + name)
            div(class=attr.class1 + ' ' + (fields[name].required == true ? ' required ' : ' ') )
              .col-lg-5
                  span.pull-right.font-weight-bold #{fields[name].label}
              div(class='dropzone__' + name + ' col-lg-7 text-lg-center')
                span(class='link-1' href="#")
                    p.drop-photo #{attr.text}
                    i(class="fa fa-" + attr.icon)
            div(class=attr.class2)
                img(src=(values[name + '_data'] ? values[name + '_data'].url : attr.default) alt=fields[name].label class="img-fluid img-" + name)
                if values[name + '_data']
                    a(href=values[name + '_data'].url).link-3 #{values[name + '_data'].name}
    else if type == 2
        div(class='dropzone__' + name + ' col-lg-7 media-item')
            div(class=attr.class1)
                span.pull-right.font-weight-bold #{fields[name].label}
            div(class=attr.class2 + ' text-lg-center')
                span(href="#").link-1
                    p.drop-photo #{attr.text}
                    i(class='fa fa-' + attr.icon)
        .col-lg-5.p-l-1.p-r-3
            .photo-scroll
                if values[name + '_data']
                    each v,k in values[name+'_data'].all_files
                        img(style="width: 100px; height: 68px;" src=v.url).img-fluid.pull-left
