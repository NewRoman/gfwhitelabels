mixin breadcrumbs(title, subtitle, data)
    section.header_title.pt50
        .container
            .row
                .pull-left
                    h1.text-uppercase= title
                        span.small-text= subtitle
                .pull-right
                    ol.breadcrumb.pull-right.m0
                        each elem in data
                            - let active = (elem[1] == '') ? 'active' : ''
                            li.breadcrumb-item(class=" " + active)
                                if elem[1] == ''
                                    = elem[0]
                                else
                                    a(href=elem[1])= elem[0]

mixin fieldBlock(name, data, attr)

    // If we did not created fields vocabulary
    // Assume it is empty field
    if fields[name] == null
        - console.log('bad field', name);
        - fields[name] = {}
        - fields[name]['label'] = name
        - fields[name]['required'] = false

    if values == null
        - values = {}
    if values[name] == null
        - values[name] = data
    - attr.type = attr.type ? attr.type : fields[name].type

    div(class=(attr.type != 'json' ? "form-group " : '' ) + (attr.row == 0 ? '' : 'row ') + name + (fields[name].required == true ? ' required ' : ' '))
        if attr.type == 'checkbox' 
                div(class=(attr.class1 ? attr.class1 : 'col-md-2') + ' text-md-right text-xs-right')
                    input(
                        id=name
                        name=name
                        value=values[name]
                        type="checkbox"
                    ).form-check-input
                div(class=attr.class2  ? attr.class2 : 'col-md-10')
                    label(for=name).text-justify #{attr.text}
        else if attr.type == 'radio' 
                label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
                div(class=attr.class2 + ' radio-input')
                    each v in fields[name].choices
                        label
                            input(
                                type="radio" 
                                class="form-check-input" 
                                name=name
                                checked=(v.value == values[name] ? "checked" : undefined)
                                value=v.value)
                            | #{v.display_name}
        else if attr.type == 'choice' 
                label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
                div(class=attr.class2)
                    select(
                        id=name
                        name=name
                    ).custom-select
                        each v in fields[name].choices
                            option(value=v.value selected=(v.value == values[name] ? "selected" : undefined)) #{v.display_name}
        else if attr.type == 'date' 
                label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
                div(class=attr.class2 id=name).date-input
                    - let data = values[name] ? values[name].split('-') : []
                    .col-lg-6.no-gutter
                        input(
                            id=name + '__month'
                            name=name + '__month'
                            placeholder="09"
                            type='numeber'
                            maxlength=2
                            value=data[1]
                          ).form-control
                    .col-lg-6.no-gutter
                        input(
                            id=name + '__year'
                            name=name + '__year'
                            placeholder="2016"
                            type='numeber'
                            maxlength=4
                            value=data[0]
                          ).form-control
        else if attr.type == 'textarea' 
                label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
                div(class=attr.class2)
                    textarea(
                        id=name
                        name=name
                        placeholder=attr.placeholder ? attr.placeholder : fields[name].label
                      ).form-control #{values[name]}
        else if attr.type == 'json' 
                - counter = attr.index || 0
                - indexCounter = attr.index || 0
                if values[name].length == 0
                    .delete-section-container
                        a(href="#" data-section=name).delete-section.pull-right
                            i.fa.fa-times
                    each k,v in fields[name].schema
                        div(class='form-group clearfix index_' + indexCounter)
                            label.col-lg-3.text-lg-right #{k.label}
                            .col-lg-9
                                if k.type == 'text' 
                                    textarea(
                                        id=name + '_' + v
                                        name=name + '[' + indexCounter + '][' + v + ']'
                                        placeholder=k.placeholder ? k.placeholder : k.label
                                      ).form-control #{k[counter]}
                                else
                                    input(
                                        id=name + '_' + v
                                        name=name + '[' + indexCounter + '][' + v + ']'
                                        placeholder=k.placeholder ? k.placeholder : k.label
                                        type=k.type
                                        value=k[counter]
                                    ).form-control
                        - counter ++
                    - indexCounter ++
                else
                    - counter = 0
                    - indexCounter = attr.index || 0
                    - let kkeys = Object.keys(values[name])
                    each el in values[name]
                        .delete-section-container
                            a(href="#" data-section=name data-index=indexCounter).delete-section.pull-right
                                i.fa.fa-times
                        each k1,v in fields[name].schema
                            - let k = values[name][kkeys[counter]][v]
                            - let t = fields[name].schema[v]
                            div(class='form-group clearfix index_' + indexCounter )
                                label.col-lg-3.text-lg-right #{t.label}
                                .col-lg-9
                                    if t.type == 'text' 
                                        textarea(
                                            id=name + '_' + v
                                            name=name + '[' + indexCounter + '][' + v + ']'
                                            placeholder=t.placeholder ? t.placeholder : t.label
                                          ).form-control #{k}
                                    else
                                        input(
                                            id=name + '_' + v
                                            name=name + '[' + indexCounter + '][' + v + ']'
                                            placeholder=t.placeholder ? t.placeholder : t.label
                                            type=t.type
                                            value=k
                                        ).form-control
                        - counter ++
                        - indexCounter ++
        else if attr.type == 'jsonVideo' 
                - counter = attr.index || 0
                - indexCounter = attr.index || 0
                if values[name].length == 0
                    div(class='form-group clearfix index_' + indexCounter)
                        a(href="#" data-section=name).delete-section.pull-right
                            i.fa.fa-times
                        .col-lg-7.videoInteractive
                            each k1,v in fields[name].schema
                                - let k = values[name][kkeys[counter]][v]
                                - let t = fields[name].schema[v]
                                .form-group.clearfix
                                    label.col-lg-5.col-md-5.text-lg-right.font-weight-bold #{t.label}
                                    .col-lg-7.col-md-7
                                        input(
                                            id=name + '_' + v
                                            name=name + '[' + indexCounter + '][' + v + ']'
                                            placeholder=t.placeholder ? t.placeholder : t.label
                                            type=t.type
                                            value=k
                                        ).form-control
                        .col-lg-5.p-l-1.p-r-3 
                            .embed-responsive.embed-responsive-16by9 
                                iframe.embed-responsive-item(src="//www.youtube.com/embed/?rel=0" allowfullscreen="true")
                else
                    - counter = 0
                    - indexCounter = attr.index || 0
                    - let kkeys = Object.keys(values[name])
                    each el in values[name]
                        div(class='form-group clearfix index_' + indexCounter)
                            a(href="#" data-section=name data-index=indexCounter).delete-section.pull-right
                                i.fa.fa-times
                            .col-lg-7.videoInteractive
                                each k1,v in fields[name].schema
                                    - let k = values[name][kkeys[counter]][v]
                                    - let t = fields[name].schema[v]
                                    .form-group.clearfix
                                        label.col-lg-5.col-md-5.text-lg-right.font-weight-bold #{t.label}
                                        .col-lg-7.col-md-7
                                            input(
                                                id=name + '_' + v
                                                name=name + '[' + indexCounter + '][' + v + ']'
                                                placeholder=t.placeholder ? t.placeholder : t.label
                                                type=t.type
                                                value=k
                                            ).form-control
                            .col-lg-5.p-l-1.p-r-3 
                                .embed-responsive.embed-responsive-16by9 
                                    - console.log('app', app, k);
                                    - let link = app.getVideoId(values[name][kkeys[counter]].link)
                                    iframe.embed-responsive-item(src="//www.youtube.com/embed/" + link + "?rel=0" allowfullscreen="true")
                        - counter ++
                        - indexCounter ++
        else
                label(class= attr.text_align ? 'text-md-' + attr.text_align + ' ' + attr.class1 : ' text-md-right ' + attr.class1 for=name)= fields[name].label
                div(class=attr.class2)
                    input(
                        id=name
                        name=name
                        placeholder=attr.placeholder ? attr.placeholder : fields[name].label
                        type=attr.type ? attr.type : 'text'
                        value=values[name]
                      ).form-control

mixin fieldDropzone(name, attr, type)
    // If we did not created fields vocabulary
    // Assume it is empty field
    if fields[name] == null
        - console.log('bad field', name);
        - fields[name] = {}
        - fields[name]['label'] = name
        - fields[name]['required'] = false

    if values == null
        - values = {}
    if values[name] == null
        - values[name] = data

    - type = attr.viewType ? attr.viewType : 1

    if type == 1
        div(class='row media-item ' + name)
            div(class=attr.class1 + ' ' + (fields[name].required == true ? ' required ' : ' ') )
              .col-lg-5
                  span.pull-right.font-weight-bold #{fields[name].label}
              div(class='dropzone__' + name + ' col-lg-7 text-lg-center')
                span(class='link-1' href="#")
                    p.drop-photo #{attr.text}
                    i(class="fa fa-" + attr.icon)
            div(class=attr.class2)
                img(src=(values[name + '_data'] ? values[name + '_data'].url : attr.default) alt=fields[name].label class="img-fluid img-" + name)
                if values[name + '_data']
                    a(href=values[name + '_data'].url).link-3 #{values[name + '_data'].name}
    else if type == 2
        div(class='dropzone__' + name + ' col-lg-7 media-item')
            div(class=attr.class1)
                span.pull-right.font-weight-bold #{fields[name].label}
            div(class=attr.class2 + ' text-lg-center')
                span(href="#").link-1
                    p.drop-photo #{attr.text}
                    i(class='fa fa-' + attr.icon)
        .col-lg-5.p-l-1.p-r-3
            .photo-scroll
                if values[name + '_data']
                    each v,k in values[name+'_data'].all_files
                        .delete-image-container
                            a(href="#" data-image=v.id).delete-image.pull-right
                                i.fa.fa-times
                        img(style="width: 100px; height: 68px;" src=v.url).img-fluid.pull-left
